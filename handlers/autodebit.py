# handlers/autodebit.py
import os, json, time
from pathlib import Path
from telebot import TeleBot
from .balance import get_balance, add_balance, set_balance
from utils.notify import log_admin

ORDERS_FILE = Path(os.getenv("ORDERS_FILE", Path(__file__).resolve().parent.parent / "orders.json"))
ORDERS_FILE.parent.mkdir(parents=True, exist_ok=True)

def _append_order(order: dict):
    try:
        data = []
        if ORDERS_FILE.exists():
            data = json.loads(ORDERS_FILE.read_text("utf-8"))
            if not isinstance(data, list):
                data = []
        data.append(order)
        ORDERS_FILE.write_text(json.dumps(data, ensure_ascii=False, indent=2), encoding="utf-8")
    except Exception:
        pass

def register_autodebit(bot: TeleBot):
    @bot.message_handler(commands=['charge'])
    def charge_cmd(m):
        """
        /charge <amount> <desc...>
        –°–ø–∏—Å—ã–≤–∞–µ—Ç <amount> ‚ÇΩ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞—ë—Ç –∑–∞–∫–∞–∑ —Ç–∏–ø–∞ 'balance_charge'.
        –ü—Ä–∏–º–µ—Ä: /charge 299 –ü–∞–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ Instagram 300
        """
        parts = (m.text or "").split()
        if len(parts) < 2:
            bot.reply_to(m, "–§–æ—Ä–º–∞—Ç: /charge <amount> <–æ–ø–∏—Å–∞–Ω–∏–µ>\n–ù–∞–ø—Ä–∏–º–µ—Ä: /charge 299 –ü–∞–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ Instagram 300")
            return
        try:
            amount = float(parts[1].replace(",", "."))
        except Exception:
            bot.reply_to(m, "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü—Ä–∏–º–µ—Ä: /charge 199.90 –ü–∞–∫ TikTok 1000"); return
        desc = " ".join(parts[2:]).strip() or "–ü–æ–∫—É–ø–∫–∞ –∏–∑ –±–∞–ª–∞–Ω—Å–∞"
        uid = m.from_user.id
        bal = get_balance(uid)
        if bal < amount:
            bot.reply_to(m, f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ë–∞–ª–∞–Ω—Å: {bal:.2f} ‚ÇΩ, —Ç—Ä–µ–±—É–µ—Ç—Å—è: {amount:.2f} ‚ÇΩ")
            return
        # —Å–ø–∏—Å—ã–≤–∞–µ–º
        set_balance(uid, bal - amount)
        order = {
            "type": "balance_charge",
            "user_id": uid,
            "username": m.from_user.username,
            "amount": amount,
            "description": desc,
            "ts": int(time.time())
        }
        _append_order(order)
        bot.reply_to(m, f"‚úÖ –û–ø–ª–∞—Ç–∞ —Å –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.\n–°–ø–∏—Å–∞–Ω–æ: {amount:.2f} ‚ÇΩ\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {get_balance(uid):.2f} ‚ÇΩ")
        try:
            log_admin(bot, f"üí≥ –°–ø–∏—Å–∞–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–∞: uid={uid} @{m.from_user.username or '‚Äî'} -{amount:.2f} ‚ÇΩ\n{desc}")
        except Exception:
            pass
